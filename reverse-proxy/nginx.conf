# note (al): I think I need to take this out since the load balancer is just over the API
user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 1024;
}

http {
	# Weather Report Reverse Proxy
    server {
        listen 8080;
        server_name localhost 127.0.0.1;

#         location / {
#             proxy_pass          http://estuary-www:4444;
#             proxy_set_header    X-Forwarded-For $remote_addr;
#         }

#         location /shuttle {
#             include cors.conf
#             proxy_pass          http://estuary-shuttle:3005/;
#             proxy_set_header    X-Forwarded-For $remote_addr;
#         }

        location /api/v1 {
            # Need to add this for the front end cors requests
            proxy_pass          http://estuary-main:3004/;
            proxy_set_header    X-Forwarded-For $remote_addr;


            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Credentials;

            set $CORS_CREDS true;
            set $CORS_ORIGIN $http_origin;
            set $CORS_METHODS 'GET, POST, PUT, DELETE, OPTIONS';
            set $CORS_HEADERS 'Authentication-Token, Cache-Control, Cookie, If-Modified-Since, Range, User-Agent, X-Requested-With';
            # FYI: Always allowed headers: Accept, Accept-Language, Content-Language, Content-Type
            set $CORS_EXPOSE_HEADERS 'Content-Disposition, Content-Length, Content-Range, Set-Cookie';
            # FYI: Always exposed headers: Cache-Control, Content-Language, Content-Type, Expires, Last-Modified, Pragma
            set $CORS_PREFLIGHT_CACHE_AGE 600;
            set $X_FRAME_OPTIONS '';
            # set $X_FRAME_OPTIONS "ALLOW FROM $http_origin";

            if ($request_method = 'OPTIONS') {
              add_header Access-Control-Allow-Origin localhost:4443;
              add_header Access-Control-Allow-Methods $CORS_METHODS;
              add_header Access-Control-Allow-Headers $CORS_HEADERS;
              add_header Access-Control-Allow-Credentials $CORS_CREDS;

              add_header Access-Control-Max-Age $CORS_PREFLIGHT_CACHE_AGE;
              add_header Content-Type 'text/plain; charset=utf-8';
              add_header Content-Length 0;
              return 204;
            }
            if ($request_method != 'OPTIONS') {
              add_header Access-Control-Allow-Origin localhost:4443;
              add_header Access-Control-Allow-Methods $CORS_METHODS;
              add_header Access-Control-Allow-Headers $CORS_HEADERS;
              add_header Access-Control-Allow-Credentials $CORS_CREDS;

              add_header Access-Control-Expose-Headers $CORS_EXPOSE_HEADERS;
              add_header X-Frame-Options $X_FRAME_OPTIONS;
            }
        }
    }
}